"""init

Revision ID: af3a824abd64
Revises: 
Create Date: 2025-08-10 12:52:55.104768

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'af3a824abd64'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('brands', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('categories', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_unique_constraint('uix_image_assignment', 'image_assignments', ['image_id', 'entity_id', 'entity_type', 'sort_order'])
    op.alter_column('images', 'name',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('images', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('images', 'url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('images', 'alt_text',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.add_column('product_lines', sa.Column('brand_id', sa.UUID(), nullable=False))
    op.add_column('product_lines', sa.Column('category_id', sa.UUID(), nullable=False))
    op.alter_column('product_lines', 'release_years',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('product_lines', 'description',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('product_lines', 'url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('product_lines', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_foreign_key(None, 'product_lines', 'categories', ['category_id'], ['id'])
    op.create_foreign_key(None, 'product_lines', 'brands', ['brand_id'], ['id'])
    op.alter_column('product_variants', 'color',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('product_variants', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=True)
    op.alter_column('product_variants', 'stock',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('product_variants', 'specs',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=True)
    op.alter_column('product_variants', 'url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('product_variants', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('products', 'release_date',
               existing_type=sa.DATE(),
               nullable=True)
    op.alter_column('products', 'url',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('products', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_unique_constraint('uix_tag_assignment', 'tag_assignments', ['tag_id', 'entity_id', 'entity_type', 'sort_order'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('uix_tag_assignment', 'tag_assignments', type_='unique')
    op.alter_column('products', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('products', 'url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('products', 'release_date',
               existing_type=sa.DATE(),
               nullable=False)
    op.alter_column('product_variants', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_variants', 'url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_variants', 'specs',
               existing_type=postgresql.JSON(astext_type=sa.Text()),
               nullable=False)
    op.alter_column('product_variants', 'stock',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('product_variants', 'price',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('product_variants', 'color',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint(None, 'product_lines', type_='foreignkey')
    op.drop_constraint(None, 'product_lines', type_='foreignkey')
    op.alter_column('product_lines', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_lines', 'url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_lines', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('product_lines', 'release_years',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_column('product_lines', 'category_id')
    op.drop_column('product_lines', 'brand_id')
    op.alter_column('images', 'alt_text',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('images', 'url',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('images', 'slug',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('images', 'name',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_constraint('uix_image_assignment', 'image_assignments', type_='unique')
    op.alter_column('categories', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('brands', 'description',
               existing_type=sa.VARCHAR(),
               nullable=False)
    # ### end Alembic commands ###
